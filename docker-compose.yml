# Docker Compose for AutoAssist Backend with MongoDB
version: "3.8"

services:
  # Backend API Service
  autoassist-backend:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      # Use MongoDB Atlas connection string (preferred)
      - DATABASE_URL=${DATABASE_URL}
      - MONGO_URI=${MONGO_URI}
      - DB_NAME=${DB_NAME}
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_TIME=${JWT_EXPIRE_TIME}
      # CORS Configuration
      - FRONTEND_URL=${FRONTEND_URL}
      # Rate Limiting
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
    volumes:
      - ./data:/app/data
    depends_on:
      - mongodb
    networks:
      - autoassist-network
    restart: unless-stopped

  # Local MongoDB Service (optional - use for development only)
  # Comment this out if using MongoDB Atlas
  mongodb:
    image: mongo:7.0
    container_name: autoassist-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=autoassist_db
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - autoassist-network
    restart: unless-stopped

  # MongoDB Express (Web UI for MongoDB - optional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: autoassist-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - autoassist-network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local

networks:
  autoassist-network:
    driver: bridge
